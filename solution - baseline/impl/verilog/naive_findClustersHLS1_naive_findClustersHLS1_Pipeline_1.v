// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module naive_findClustersHLS1_naive_findClustersHLS1_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        clusterGrid_x_address0,
        clusterGrid_x_ce0,
        clusterGrid_x_we0,
        clusterGrid_x_d0,
        clusterGrid_x_address1,
        clusterGrid_x_ce1,
        clusterGrid_x_we1,
        clusterGrid_x_d1,
        clusterGrid_y_address0,
        clusterGrid_y_ce0,
        clusterGrid_y_we0,
        clusterGrid_y_d0,
        clusterGrid_y_address1,
        clusterGrid_y_ce1,
        clusterGrid_y_we1,
        clusterGrid_y_d1,
        clusterGrid_clusterID_address0,
        clusterGrid_clusterID_ce0,
        clusterGrid_clusterID_we0,
        clusterGrid_clusterID_d0,
        clusterGrid_clusterID_address1,
        clusterGrid_clusterID_ce1,
        clusterGrid_clusterID_we1,
        clusterGrid_clusterID_d1
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] clusterGrid_x_address0;
output   clusterGrid_x_ce0;
output   clusterGrid_x_we0;
output  [31:0] clusterGrid_x_d0;
output  [6:0] clusterGrid_x_address1;
output   clusterGrid_x_ce1;
output   clusterGrid_x_we1;
output  [31:0] clusterGrid_x_d1;
output  [6:0] clusterGrid_y_address0;
output   clusterGrid_y_ce0;
output   clusterGrid_y_we0;
output  [31:0] clusterGrid_y_d0;
output  [6:0] clusterGrid_y_address1;
output   clusterGrid_y_ce1;
output   clusterGrid_y_we1;
output  [31:0] clusterGrid_y_d1;
output  [6:0] clusterGrid_clusterID_address0;
output   clusterGrid_clusterID_ce0;
output   clusterGrid_clusterID_we0;
output  [31:0] clusterGrid_clusterID_d0;
output  [6:0] clusterGrid_clusterID_address1;
output   clusterGrid_clusterID_ce1;
output   clusterGrid_clusterID_we1;
output  [31:0] clusterGrid_clusterID_d1;

reg ap_idle;
reg[6:0] clusterGrid_x_address0;
reg clusterGrid_x_ce0;
reg clusterGrid_x_we0;
reg[6:0] clusterGrid_x_address1;
reg clusterGrid_x_ce1;
reg clusterGrid_x_we1;
reg[6:0] clusterGrid_y_address0;
reg clusterGrid_y_ce0;
reg clusterGrid_y_we0;
reg[6:0] clusterGrid_y_address1;
reg clusterGrid_y_ce1;
reg clusterGrid_y_we1;
reg[6:0] clusterGrid_clusterID_address0;
reg clusterGrid_clusterID_ce0;
reg clusterGrid_clusterID_we0;
reg[6:0] clusterGrid_clusterID_address1;
reg clusterGrid_clusterID_ce1;
reg clusterGrid_clusterID_we1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
reg   [0:0] icmp_ln142_reg_517;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] add_ln142_1_fu_359_p2;
reg   [6:0] add_ln142_1_reg_505;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln142_fu_391_p2;
wire   [63:0] zext_ln142_1_fu_365_p1;
wire   [63:0] zext_ln142_2_fu_378_p1;
wire   [63:0] zext_ln142_3_fu_407_p1;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln142_4_fu_419_p1;
wire   [63:0] zext_ln142_5_fu_431_p1;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln142_6_fu_443_p1;
wire   [63:0] zext_ln142_7_fu_455_p1;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln142_8_fu_467_p1;
wire   [63:0] zext_ln142_9_fu_479_p1;
wire   [63:0] zext_ln142_10_fu_491_p1;
reg   [3:0] indvars_iv117_fu_54;
wire   [3:0] add_ln142_fu_385_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_indvars_iv117_load;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state4_pp0_stage3_iter0;
wire   [4:0] tmp_1_fu_347_p3;
wire   [6:0] tmp_fu_339_p3;
wire   [6:0] zext_ln142_fu_355_p1;
wire   [6:0] or_ln142_fu_372_p2;
wire   [6:0] add_ln142_2_fu_402_p2;
wire   [6:0] add_ln142_3_fu_414_p2;
wire   [6:0] add_ln142_4_fu_426_p2;
wire   [6:0] add_ln142_5_fu_438_p2;
wire   [6:0] add_ln142_6_fu_450_p2;
wire   [6:0] add_ln142_7_fu_462_p2;
wire   [6:0] add_ln142_8_fu_474_p2;
wire   [6:0] add_ln142_9_fu_486_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_done_reg = 1'b0;
end

naive_findClustersHLS1_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv117_fu_54 <= add_ln142_fu_385_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln142_1_reg_505[6 : 1] <= add_ln142_1_fu_359_p2[6 : 1];
        icmp_ln142_reg_517 <= icmp_ln142_fu_391_p2;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln142_reg_517 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvars_iv117_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv117_load = indvars_iv117_fu_54;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_clusterID_address0 = zext_ln142_10_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_clusterID_address0 = zext_ln142_8_fu_467_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_clusterID_address0 = zext_ln142_6_fu_443_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_clusterID_address0 = zext_ln142_4_fu_419_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_clusterID_address0 = zext_ln142_2_fu_378_p1;
    end else begin
        clusterGrid_clusterID_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_clusterID_address1 = zext_ln142_9_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_clusterID_address1 = zext_ln142_7_fu_455_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_clusterID_address1 = zext_ln142_5_fu_431_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_clusterID_address1 = zext_ln142_3_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_clusterID_address1 = zext_ln142_1_fu_365_p1;
    end else begin
        clusterGrid_clusterID_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_clusterID_ce0 = 1'b1;
    end else begin
        clusterGrid_clusterID_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_clusterID_ce1 = 1'b1;
    end else begin
        clusterGrid_clusterID_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_clusterID_we0 = 1'b1;
    end else begin
        clusterGrid_clusterID_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_clusterID_we1 = 1'b1;
    end else begin
        clusterGrid_clusterID_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_x_address0 = zext_ln142_10_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_x_address0 = zext_ln142_8_fu_467_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_x_address0 = zext_ln142_6_fu_443_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_x_address0 = zext_ln142_4_fu_419_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_x_address0 = zext_ln142_2_fu_378_p1;
    end else begin
        clusterGrid_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_x_address1 = zext_ln142_9_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_x_address1 = zext_ln142_7_fu_455_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_x_address1 = zext_ln142_5_fu_431_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_x_address1 = zext_ln142_3_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_x_address1 = zext_ln142_1_fu_365_p1;
    end else begin
        clusterGrid_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_x_ce0 = 1'b1;
    end else begin
        clusterGrid_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_x_ce1 = 1'b1;
    end else begin
        clusterGrid_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_x_we0 = 1'b1;
    end else begin
        clusterGrid_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_x_we1 = 1'b1;
    end else begin
        clusterGrid_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_y_address0 = zext_ln142_10_fu_491_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_y_address0 = zext_ln142_8_fu_467_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_y_address0 = zext_ln142_6_fu_443_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_y_address0 = zext_ln142_4_fu_419_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_y_address0 = zext_ln142_2_fu_378_p1;
    end else begin
        clusterGrid_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        clusterGrid_y_address1 = zext_ln142_9_fu_479_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clusterGrid_y_address1 = zext_ln142_7_fu_455_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clusterGrid_y_address1 = zext_ln142_5_fu_431_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        clusterGrid_y_address1 = zext_ln142_3_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        clusterGrid_y_address1 = zext_ln142_1_fu_365_p1;
    end else begin
        clusterGrid_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_y_ce0 = 1'b1;
    end else begin
        clusterGrid_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_y_ce1 = 1'b1;
    end else begin
        clusterGrid_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_y_we0 = 1'b1;
    end else begin
        clusterGrid_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        clusterGrid_y_we1 = 1'b1;
    end else begin
        clusterGrid_y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln142_1_fu_359_p2 = (tmp_fu_339_p3 + zext_ln142_fu_355_p1);

assign add_ln142_2_fu_402_p2 = (add_ln142_1_reg_505 + 7'd2);

assign add_ln142_3_fu_414_p2 = (add_ln142_1_reg_505 + 7'd3);

assign add_ln142_4_fu_426_p2 = (add_ln142_1_reg_505 + 7'd4);

assign add_ln142_5_fu_438_p2 = (add_ln142_1_reg_505 + 7'd5);

assign add_ln142_6_fu_450_p2 = (add_ln142_1_reg_505 + 7'd6);

assign add_ln142_7_fu_462_p2 = (add_ln142_1_reg_505 + 7'd7);

assign add_ln142_8_fu_474_p2 = (add_ln142_1_reg_505 + 7'd8);

assign add_ln142_9_fu_486_p2 = (add_ln142_1_reg_505 + 7'd9);

assign add_ln142_fu_385_p2 = (ap_sig_allocacmp_indvars_iv117_load + 4'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign clusterGrid_clusterID_d0 = 32'd0;

assign clusterGrid_clusterID_d1 = 32'd0;

assign clusterGrid_x_d0 = 32'd0;

assign clusterGrid_x_d1 = 32'd0;

assign clusterGrid_y_d0 = 32'd0;

assign clusterGrid_y_d1 = 32'd0;

assign icmp_ln142_fu_391_p2 = ((ap_sig_allocacmp_indvars_iv117_load == 4'd9) ? 1'b1 : 1'b0);

assign or_ln142_fu_372_p2 = (7'd1 | add_ln142_1_fu_359_p2);

assign tmp_1_fu_347_p3 = {{ap_sig_allocacmp_indvars_iv117_load}, {1'd0}};

assign tmp_fu_339_p3 = {{ap_sig_allocacmp_indvars_iv117_load}, {3'd0}};

assign zext_ln142_10_fu_491_p1 = add_ln142_9_fu_486_p2;

assign zext_ln142_1_fu_365_p1 = add_ln142_1_fu_359_p2;

assign zext_ln142_2_fu_378_p1 = or_ln142_fu_372_p2;

assign zext_ln142_3_fu_407_p1 = add_ln142_2_fu_402_p2;

assign zext_ln142_4_fu_419_p1 = add_ln142_3_fu_414_p2;

assign zext_ln142_5_fu_431_p1 = add_ln142_4_fu_426_p2;

assign zext_ln142_6_fu_443_p1 = add_ln142_5_fu_438_p2;

assign zext_ln142_7_fu_455_p1 = add_ln142_6_fu_450_p2;

assign zext_ln142_8_fu_467_p1 = add_ln142_7_fu_462_p2;

assign zext_ln142_9_fu_479_p1 = add_ln142_8_fu_474_p2;

assign zext_ln142_fu_355_p1 = tmp_1_fu_347_p3;

always @ (posedge ap_clk) begin
    add_ln142_1_reg_505[0] <= 1'b0;
end

endmodule //naive_findClustersHLS1_naive_findClustersHLS1_Pipeline_1
